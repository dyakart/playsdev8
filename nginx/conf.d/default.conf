# ==============================
# 1) Балансировка (red/blue)
# ==============================
upstream redblue_backend {
    server nginx-red:80;
    server nginx-blue:80;
}

# ==============================
# 2) Редирект с 80 -> 443
# ==============================
#server {
#    listen 80;
#    server_name _;

    # Простой редирект на https
#    return 301 https://$host$request_uri;
#}

# ==============================
# 3) Основной сервер на 443
# ==============================
server {
    listen 80; # если не готовы к SSL, можно сделать listen 443 http2 или просто listen 443
    server_name _;

    # Подключаем сертификаты (при их наличии)
    # ssl_certificate /etc/nginx/certs/fullchain.pem;
    # ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Здесь делаем DocumentRoot.
    # ./nginx/html на /usr/share/nginx/html
    root /usr/share/nginx/html;
    index index.html;

    # ==============================
    # Главная страница
    # ==============================
    location / {
        try_files $uri $uri/ =404;
    }

    # secondpage.html
    location /secondpage {
        try_files $uri $uri/ /secondpage.html;
    }

    location /info.php {
        proxy_pass http://apache-php;
        proxy_set_header Host $host;
    }

    # скачивание музыки
    location /music {
        alias /usr/share/nginx/html/music.mp3;
        add_header Content-Type application/octet-stream;
        add_header Content-Disposition "attachment; filename=music.mp3";
    }

    # Проксирование на PHP (Apache, который на порту 80 в контейнере)
    #location /info.php {
    #    proxy_pass http://example.сom;
    #}

    # ==============================
    # Балансировка red/blue
    # ==============================
    location /redblue {
        proxy_pass http://redblue_backend/;
    }

    # Rotate JPG
    location ~* \.jpg$ {
        image_filter rotate 180;
        image_filter_buffer 10M;
        try_files $uri =404;
        add_header Content-Type "image/jpeg";
    }

    # для отображения загрузки CPU
    location = /cpu {
        proxy_pass http://cpu-service:9000/;
    }
}
